// <auto-generated />
using System;
using LS_ERP.EntityFrameworkCore.SqlServer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;


namespace LS_ERP.EntityFrameworkCore.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerAppDbContext))]
    [Migration("20221110063512_createProducionDept")]
    partial class createProducionDept
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItemStylePackingList", b =>
                {
                    b.Property<string>("ItemStylesNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PackingListsID")
                        .HasColumnType("int");

                    b.HasKey("ItemStylesNumber", "PackingListsID");

                    b.HasIndex("PackingListsID");

                    b.ToTable("ItemStylePackingList");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.AllocDailyOutput", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuttingOutputID")
                        .HasColumnType("int");

                    b.Property<string>("EstimatedPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FabricContrastID")
                        .HasColumnType("int");

                    b.Property<string>("FabricContrastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFull")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PSDD")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sample")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("AllocDailyOutput");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.AllocPriority", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AllocPriority");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.AllocTransaction", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AllocDailyOuputID")
                        .HasColumnType("int");

                    b.Property<decimal>("AllocQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuttingOutputID")
                        .HasColumnType("int");

                    b.Property<int>("DailyTargetDetailID")
                        .HasColumnType("int");

                    b.Property<string>("FabricContrastID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContrastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRetured")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AllocTransaction");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BankAccount", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxDetail", b =>
                {
                    b.Property<string>("Oid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BoxGroupOid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GCRecord")
                        .HasColumnType("int");

                    b.Property<string>("GTIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMerge")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptimisticLockField")
                        .HasColumnType("int");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Oid");

                    b.HasIndex("BoxGroupOid");

                    b.ToTable("BoxDetails");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxDimension", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("Code");

                    b.ToTable("BoxDimension");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxGroup", b =>
                {
                    b.Property<string>("Oid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BarcodeRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GCRecord")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPulled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptimisticLockField")
                        .HasColumnType("int");

                    b.Property<string>("PONum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackingListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SheetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Oid");

                    b.ToTable("BoxGroups");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxInfo", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("QuantityPerBox")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("TagID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("BoxInfo");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxModel", b =>
                {
                    b.Property<string>("Oid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxGroupOid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GCRecord")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptimisticLockField")
                        .HasColumnType("int");

                    b.HasKey("Oid");

                    b.HasIndex("BoxGroupOid");

                    b.ToTable("BoxModels");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Brand", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("CustomerID");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Company", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BankAccountID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayFaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("BankAccountID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Consignee", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BankAccountID")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CountryID")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InvoiceID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BankAccountID");

                    b.HasIndex("CountryID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("Consignee");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Country", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Currency", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rounding")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.CurrencyExchange", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationCurrencyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EffectDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.ToTable("CurrencyExchange");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.CurrencyExchangeType", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DestinationCurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("DestinationCurrencyID");

                    b.ToTable("CurrencyExchangeType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Customer", b =>
                {
                    b.Property<string>("ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BankAccountID")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CountryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DivisionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PaymentTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("BankAccountID");

                    b.HasIndex("CountryID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("PaymentTermCode");

                    b.HasIndex("PriceTermCode");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.CuttingCard", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AllocQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardTypeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuttingOutputID")
                        .HasColumnType("int");

                    b.Property<string>("FabricContrastColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContrastDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FabricContrastID")
                        .HasColumnType("int");

                    b.Property<string>("FabricContrastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAllSize")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompling")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrint")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeBlockLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OnHandQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProduceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QRCodeBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StorageBinEntryID")
                        .HasColumnType("int");

                    b.Property<int>("TableNO")
                        .HasColumnType("int");

                    b.Property<int>("TotalPackage")
                        .HasColumnType("int");

                    b.Property<string>("WorkCenterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CuttingCard");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.CuttingLot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AllocDailyOutputID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuttingOutputID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CuttingLot");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.CuttingOutput", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Block")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContrast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContrastDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FabricContrastID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAllSize")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllocated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Layer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Lot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeBlockLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProduceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ratio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ResidualQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableNO")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPackage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WorkCenterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkCenterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CuttingOutput");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.DailyTarget", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContrast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GarmentColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InlineDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreatedDetail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeBlockLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfWorker")
                        .HasColumnType("int");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PSDD")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentPrint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ProduceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SMV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sample")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SampleWithSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TargetQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalTargetQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<string>("WorkCenterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkCenterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DailyTarget");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.DailyTargetDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DailyTargetID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Efficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InlineDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAllocated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfWorker")
                        .HasColumnType("int");

                    b.Property<decimal?>("Offset")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProduceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RejectRate")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SMV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalOrderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTargetQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WorkCenterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkCenterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DailyTargetDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Division", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.EntitySequenceNumber", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FillLengtCharacter")
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("LastNumber")
                        .HasColumnType("int");

                    b.Property<int?>("NumberLength")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subfix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("EntitySequenceNumber");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricContrast", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContrastColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionForPant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionForShirt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeBlockLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FabricContrast");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricPurchaseOrder", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ContractualDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStyles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DeliveredQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("EstimatedTimeOfDeparture")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedDeliveryDateWeek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricSupplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("IssuedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Offset")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OnHandQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("OrderCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("OrderedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ProductionMethodCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ProductionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ReceivedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Seasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ShippedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("SupplierContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UpdatedEstimatedTimeOfDeparture")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserFollow")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasFilter("[Number] IS NOT NULL");

                    b.HasIndex("ProductionMethodCode");

                    b.HasIndex("UnitID");

                    b.ToTable("FabricPurchaseOrder");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricRequest", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStyleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("PercentWastage")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StatusID");

                    b.ToTable("FabricRequest");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricRequestDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BalanceQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("BreadthWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ConsumtionQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CustomerConsumption")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("CuttingConsumption")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("FabricColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FabricRequestID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("IssuedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("PercentPrint")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("PercentPrintQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("PercentWastage")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("PercentWastageQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("RequestQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("StreakRequestQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("FabricRequestID");

                    b.ToTable("FabricRequestDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FinishGoodTransaction", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InventoryFGID")
                        .HasColumnType("bigint");

                    b.Property<long>("InventoryPeriodID")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsReversed")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PackingListID")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long>("ScanResultDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ShippingPlanDetailID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FinishGoodTransaction");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForecastOverallID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlannedQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<int>("SizeSortIndex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ForecastOverallID");

                    b.ToTable("ForecastDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastEntry", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ForecastGroupID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ForecastGroupID");

                    b.HasIndex("WeekID");

                    b.ToTable("ForecastEntry");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastGroup", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ForecastFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ForecastTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ForecastGroup");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastMaterial", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 20000)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ConsumptionQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("CutWidth")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FabricWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FabricWidth")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long?>("ForecastDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("ForecastOverallID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("FreePercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FreeQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("int");

                    b.Property<decimal?>("LessPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LessQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaterialClassType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PartMaterialID")
                        .HasColumnType("bigint");

                    b.Property<string>("PerUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("QuantityPerUnit")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("RemainQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("RequiredQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("ReservedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<int?>("SizeSortIndex")
                        .HasColumnType("int");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("WareHouseQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("WastagePercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("WastageQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("ForecastDetailID");

                    b.HasIndex("ForecastOverallID");

                    b.HasIndex("MaterialTypeCode");

                    b.HasIndex("PerUnitID");

                    b.HasIndex("PriceUnitID");

                    b.HasIndex("VendorID");

                    b.ToTable("ForecastMaterial");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastOverall", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateWeekID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateWeekTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ForecastEntryID")
                        .HasColumnType("bigint");

                    b.Property<string>("ForecastWeekID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ForecastWeekTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBomPulled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuantityBalanced")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuantityCalculated")
                        .HasColumnType("bit");

                    b.Property<string>("LSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PlannedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaveFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipPack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CreateWeekID");

                    b.HasIndex("ForecastEntryID");

                    b.HasIndex("ForecastWeekID");

                    b.ToTable("ForecastOverall");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Gender", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            ID = "M",
                            Name = "Boy"
                        },
                        new
                        {
                            ID = "F",
                            Name = "Girl"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.GroupMail", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BCCs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CustomerID");

                    b.ToTable("GroupMail");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CompanyCode = "LS",
                            CustomerID = "DE",
                            DepartmentName = "CUTTING",
                            IsDeleted = false,
                            Mail = "cutting@leadingstar.com.vn"
                        },
                        new
                        {
                            ID = 2L,
                            CompanyCode = "LK",
                            CustomerID = "DE",
                            DepartmentName = "CUTTING",
                            IsDeleted = false,
                            Mail = "cutting@luckystargarment.com.vn"
                        },
                        new
                        {
                            ID = 3L,
                            CompanyCode = "LS",
                            CustomerID = "DE",
                            DepartmentName = "WAREHOUSE",
                            IsDeleted = false,
                            Mail = "fb@leadingstar.com.vn"
                        },
                        new
                        {
                            ID = 4L,
                            CompanyCode = "LK",
                            CustomerID = "DE",
                            DepartmentName = "WAREHOUSE",
                            IsDeleted = false,
                            Mail = "fb@leadingstar.com.vn"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.IncoTerm", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("IncoTerm");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InventoryDetailFG", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InventoryFGID")
                        .HasColumnType("bigint");

                    b.Property<long>("InventoryPeriodID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PackingListID")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long>("ScanResultDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ShippingPlanDetailID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("InventoryDetailFG");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InventoryFG", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OnHandQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("InventoryFG");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InventoryPeriod", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("InventoryPeriod");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InventoryPeriodEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InventoryPeriodID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("InventoryPeriodID");

                    b.ToTable("InventoryPeriodEntry");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Invoice", b =>
                {
                    b.Property<long?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("ConsigneeID")
                        .HasColumnType("bigint");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerInvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimatedTimeOfArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedTimeOfDeparture")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FinalDestinationID")
                        .HasColumnType("bigint");

                    b.Property<string>("FlightNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncotermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("InvoiceTypeID")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("PortOfDischargeID")
                        .HasColumnType("bigint");

                    b.Property<long?>("PortOfLoadingID")
                        .HasColumnType("bigint");

                    b.Property<string>("SealNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ShipToID")
                        .HasColumnType("bigint");

                    b.Property<string>("ShipmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VesselVoyageNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("ConsigneeID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FinalDestinationID");

                    b.HasIndex("IncotermCode");

                    b.HasIndex("InvoiceTypeID");

                    b.HasIndex("PaymentTermCode");

                    b.HasIndex("PortOfDischargeID");

                    b.HasIndex("PortOfLoadingID");

                    b.HasIndex("ShipToID");

                    b.HasIndex("ShipmentCode");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InvoiceDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("CategoryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InvoiceID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("UnitID");

                    b.ToTable("InvoiceDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InvoiceDocument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileNameServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceDocumentTypeID")
                        .HasColumnType("int");

                    b.Property<long?>("InvoiceID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FileName")
                        .IsUnique()
                        .HasFilter("[FileName] IS NOT NULL");

                    b.HasIndex("InvoiceDocumentTypeID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("InvoiceDocument");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InvoiceDocumentType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("InvoiceDocumentType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InvoiceType", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("InvoiceType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Issued", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountCreditNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountDebitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FabricRequestID")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumberNoTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuedTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Number");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StorageCode");

                    b.ToTable("Issued");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.IssuedGroupLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CartonQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DyeLotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FabricRequestDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("IssuedQuantity")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReceivedQuantity")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<decimal?>("RequestQuantity")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<decimal?>("Roll")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageBinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StorageDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("StorageStatusID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IssuedNumber");

                    b.HasIndex("StorageStatusID");

                    b.ToTable("IssuedGroupLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.IssuedLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CartonQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DyeLotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FabricRequestDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GroupItemColor")
                        .HasColumnType("bit");

                    b.Property<bool>("GroupSize")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("IssuedGroupLineID")
                        .HasColumnType("bigint");

                    b.Property<string>("IssuedNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("IssuedQuantity")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductionBOMID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ReceivedQuantity")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<decimal?>("RequestQuantity")
                        .HasColumnType("DECIMAL(19,4)");

                    b.Property<decimal?>("Roll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SizeSortIndex")
                        .HasColumnType("int");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageBinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StorageDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("StorageStatusID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IssuedGroupLineID");

                    b.HasIndex("IssuedNumber");

                    b.HasIndex("ProductionBOMID");

                    b.HasIndex("StorageStatusID");

                    b.ToTable("IssuedLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.IssuedType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IssuedType");

                    b.HasData(
                        new
                        {
                            Id = "IS",
                            Name = "Issued for production",
                            OtherName = "Xuất phụ liệu/vải cho sản xuất"
                        },
                        new
                        {
                            Id = "IR",
                            Name = "Issued for return",
                            OtherName = "Xuất trả hàng"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Item", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("CustomerID");

                    b.HasIndex("MaterialTypeCode");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemMaster", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GroupItemColor")
                        .HasColumnType("bit");

                    b.Property<bool?>("GroupSize")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemMaster");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemMeta", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDisplayname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemID");

                    b.ToTable("ItemMeta");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemModel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeptSubFineline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FixtureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MSRP")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Mfg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaveFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppPlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagSticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ItemModel");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemPrice", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EffectDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PriceUnitID");

                    b.HasIndex("ShippingTermCode");

                    b.HasIndex("VendorID");

                    b.ToTable("ItemPrice");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCodeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ETAPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimatedSupplierHandOver")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalPurchaseOrderTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalPurchaseOrderTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HangFlat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBomPulled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCalculateRequiredQuantity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEnoughQuantity")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIssued")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNotCompare")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuantityBalanced")
                        .HasColumnType("bit");

                    b.Property<string>("ItemStyleStatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MSRP")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<bool?>("MultiShip")
                        .HasColumnType("bit");

                    b.Property<string>("OldLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OldShipDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("OldTotalQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PCB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductionSkedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PurchaseOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseOrderNumberIndex")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseOrderStatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseOrderTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("UCustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UCustomerCodeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.HasIndex("ItemStyleStatusCode");

                    b.HasIndex("PriceTermCode");

                    b.HasIndex("PurchaseOrderStatusCode");

                    b.HasIndex("PurchaseOrderTypeCode");

                    b.HasIndex("SalesOrderID");

                    b.HasIndex("UnitID");

                    b.ToTable("ItemStyle");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleBarCode", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeSortIndex")
                        .HasColumnType("int");

                    b.Property<string>("UE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemStyleNumber");

                    b.ToTable("ItemStyleBarCode");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleStatus", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ItemStyleStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncAction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemStyleSyncMasterID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemStyleSyncMasterID");

                    b.ToTable("ItemStyleSyncActions");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AccessoriesDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualAccessoriesDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualFabricDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ContractualSupplierHandover")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cutting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FabricDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IssuedDateBU")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Merchandiser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monthly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldDeliveryPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldGarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OldProductionSkedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OldPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldSeason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OldTotalQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProductionSkedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sewing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ItemStyleNumber");

                    b.ToTable("ItemStyleSyncMasters");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobHead", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Config")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OverPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("PartRevisionID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ProductionQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("RequestDueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SampleQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Number");

                    b.HasIndex("PartRevisionID");

                    b.ToTable("JobHead");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobOperation", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("CompletedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimateEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimateStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstimatedWorkCenterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobHeadNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RemainQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RequiredQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkCenterID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("JobHeadNumber");

                    b.HasIndex("WorkCenterID");

                    b.ToTable("JobOperation");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobOutput", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DailyTargetID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Efficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemStyleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobHeadNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JobOperationID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JobOperationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfWorker")
                        .HasColumnType("int");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OutputAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PassedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("StyleNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TargetQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalTargetQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WorkCenterID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkCenterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkingTimeID")
                        .HasColumnType("int");

                    b.Property<string>("WorkingTimeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DailyTargetID");

                    b.HasIndex("JobHeadNumber");

                    b.HasIndex("JobOperationID");

                    b.HasIndex("WorkCenterID");

                    b.HasIndex("WorkingTimeID");

                    b.ToTable("JobOuput");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobPrice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("JobPrice");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.LabelPort", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ETAPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LabelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("LabelPort");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.LoadingPlan", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ASNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ORINumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PCB")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Port")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<int?>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("Shu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Volumn")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("LoadingPlan");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Log", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StorageCode");

                    b.ToTable("MaterialRequests");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialRequestDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GroupItemColor")
                        .HasColumnType("bit");

                    b.Property<bool>("GroupSize")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMaterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialRequestId")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantityPerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RequiredQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Roll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialRequestId");

                    b.ToTable("MaterialRequestDetails");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialSync", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FirstIssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IssuedQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemStyleSyncMasterID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastIssuedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionBOMID")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RequiredQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<decimal>("ReservedQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ItemStyleSyncMasterID");

                    b.ToTable("MaterialSyncs");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialSyncDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialSyncID")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("MaterialSyncID");

                    b.ToTable("MaterialSyncDetails");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialTransaction", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CartonQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DyeLotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FabricRequestDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumberNoTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReversed")
                        .HasColumnType("bit");

                    b.Property<long?>("IssuedLineID")
                        .HasColumnType("bigint");

                    b.Property<string>("IssuedNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Offset")
                        .HasColumnType("bit");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("QualityAssuranceID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long?>("ReceiptGroupLineID")
                        .HasColumnType("bigint");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RequestQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Roll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageBinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StorageDetailID")
                        .HasColumnType("bigint");

                    b.Property<int>("StorageImportDetailID")
                        .HasColumnType("int");

                    b.Property<int>("StorageImportID")
                        .HasColumnType("int");

                    b.Property<string>("StorageStatusID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFollow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IssuedLineID");

                    b.HasIndex("IssuedNumber");

                    b.HasIndex("ReceiptGroupLineID");

                    b.HasIndex("ReceiptNumber");

                    b.HasIndex("StorageDetailID");

                    b.ToTable("MaterialTransaction");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("MaterialType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MessageTemplate", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("MessageTemplate");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Operation", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.OperationDetail", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FabricContrastID")
                        .HasColumnType("int");

                    b.Property<string>("FabricContrastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentPrint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MergeBlockLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("OperationDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.OrderDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ConsumedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("OldQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("OtherPrice")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal>("OverPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("ReservedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal>("SampleQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ShipQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeSortIndex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ItemStyleNumber");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingLine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxDimensionCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FromNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("InnerBoxDimensionCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("InnerHeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("InnerLength")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("InnerWidth")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("PackagesPerBox")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PackingListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackingListID")
                        .HasColumnType("int");

                    b.Property<string>("PadCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PrePack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("QuantityPerCarton")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("QuantityPerPackage")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("QuantitySize")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("SequenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToNo")
                        .HasColumnType("int");

                    b.Property<int?>("TotalBarCode")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCarton")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("BoxDimensionCode");

                    b.HasIndex("InnerBoxDimensionCode");

                    b.HasIndex("PackingListID");

                    b.HasIndex("PadCode");

                    b.ToTable("PackingLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BarCodeCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("BrandPurchaseOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Confirm")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeliveryGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DontShortShip")
                        .HasColumnType("bit");

                    b.Property<string>("Factory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InvoiceID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSeparated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShipped")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdinalShip")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PPCBookDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackingListCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("PackingListDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackingUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RatioBottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatioLeft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatioRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("SheetNameID")
                        .HasColumnType("bigint");

                    b.Property<string>("ShippingMark1Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShippingMark2Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShippingMethodCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TotalBarCodeCarton")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasAlternateKey("PackingListCode");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CustomerID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("PackingUnitID");

                    b.HasIndex("SalesOrderID");

                    b.HasIndex("SheetNameID");

                    b.HasIndex("ShippingMark1Code");

                    b.HasIndex("ShippingMark2Code");

                    b.HasIndex("ShippingMethodCode");

                    b.ToTable("PackingList");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingListImageThumbnail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackingListID")
                        .HasColumnType("int");

                    b.Property<int?>("SortIndex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PackingListID");

                    b.ToTable("PackingListImageThumbnail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Company")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotePacking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteProduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PackPercent")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<decimal>("PackQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<DateTime>("ProductionSketDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("WorkCenters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackingOutputs");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingOverQuantity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackingListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackingListID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeSortIndex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ItemStyleNumber");

                    b.HasIndex("PackingListID");

                    b.ToTable("PackingOverQuantity");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingSheetName", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SheetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SheetSortIndex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PackingSheetName");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingUnit", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LengthUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PackingUnit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Pad", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Pad");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Part", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Character")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastSequenceNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartMaster", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxInStockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MinInStockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PartMaster");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartMaterial", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("CutWidth")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FabricWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FabricWidth")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FreePercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GroupItemColor")
                        .HasColumnType("bit");

                    b.Property<bool?>("GroupSize")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("int");

                    b.Property<decimal?>("LessPercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("MaterialSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaterialSizeConsumption")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaterialTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OverPercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PartMaterialStatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PartRevisionID")
                        .HasColumnType("bigint");

                    b.Property<string>("PerUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("QuantityPerUnit")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<int?>("SizeSortIndex")
                        .HasColumnType("int");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("WastagePercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("MaterialTypeCode");

                    b.HasIndex("PartMaterialStatusCode");

                    b.HasIndex("PartRevisionID");

                    b.HasIndex("PerUnitID");

                    b.HasIndex("PriceUnitID");

                    b.HasIndex("VendorID");

                    b.ToTable("PartMaterial");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartMaterialStatus", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("PartMaterialStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartMeta", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PartMeta");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartPrice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ProductionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SMV")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleNO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PartPrice");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevision", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EffectDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PullBomTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RevisionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PullBomTypeCode");

                    b.ToTable("PartRevision");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevisionLog", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PartRevisionID")
                        .HasColumnType("bigint");

                    b.Property<string>("PartRevisionLogReferenceCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("PartRevisionID");

                    b.HasIndex("PartRevisionLogReferenceCode");

                    b.ToTable("PartRevisionLog");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevisionLogDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CutWidth")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FabricWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FabricWidth")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FreePercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("int");

                    b.Property<decimal?>("LessPercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("MaterialTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OverPercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long?>("PartMaterialID")
                        .HasColumnType("bigint");

                    b.Property<string>("PartMaterialStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PartRevisionID")
                        .HasColumnType("bigint");

                    b.Property<string>("PartRevisionLogCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PerUnitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("QuantityPerUnit")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WastagePercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("PartMaterialID");

                    b.HasIndex("PartRevisionLogCode");

                    b.ToTable("PartRevisionLogDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PaymentTerm", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DueDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("PaymentTerm");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Plant", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("CompanyCode");

                    b.ToTable("Plant");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Port", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CountryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("Port");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("PriceTerm");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Problem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortIndex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Problem");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ProductionBOM", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ConsumptionQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("CutWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FabricWeight")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FabricWidth")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FreePercent")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FreeQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GroupItemColor")
                        .HasColumnType("bit");

                    b.Property<bool?>("GroupSize")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("IssuedQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JobHeadNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("int");

                    b.Property<decimal?>("LessPercent")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("LessQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("MaterialTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartMaterialID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PartMaterialID1")
                        .HasColumnType("bigint");

                    b.Property<string>("PerUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ProductionQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityPerUnit")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("RemainQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("RequiredQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("ReservedQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<int?>("SizeSortIndex")
                        .HasColumnType("int");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("WareHouseQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("WastagePercent")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("WastageQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("ItemStyleNumber");

                    b.HasIndex("JobHeadNumber");

                    b.HasIndex("MaterialTypeCode");

                    b.HasIndex("PartMaterialID1");

                    b.HasIndex("PerUnitID");

                    b.HasIndex("PriceUnitID");

                    b.HasIndex("VendorID");

                    b.ToTable("ProductionBOM");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ProductionDept", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dept")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProductionDept");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PullBomType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("PullBomType");

                    b.HasData(
                        new
                        {
                            Code = "PA",
                            IsDeleted = false,
                            Name = "Pull All"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrder", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyExchangeTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("CurrencyExchangeValue")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("EstimateShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncoTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncludedTax")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Percentage")
                        .HasColumnType("bit");

                    b.Property<string>("PurchaseOrderStatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMethodCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShippingTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupplierCNUFCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("TotalAmount")
                        .HasPrecision(29, 9)
                        .HasColumnType("decimal(29,9)");

                    b.Property<DateTime?>("VendorConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CurrencyExchangeTypeID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("IncoTermCode");

                    b.HasIndex("PaymentTermCode");

                    b.HasIndex("PurchaseOrderStatusCode");

                    b.HasIndex("ShippingMethodCode");

                    b.HasIndex("ShippingTermCode");

                    b.HasIndex("SupplierCNUFCode");

                    b.HasIndex("TaxCode");

                    b.HasIndex("VendorID");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderGroupLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mfg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PurchaseOrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("ReceiptQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("WareHouseQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("WareHouseUnitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WastageQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("PurchaseOrderID");

                    b.HasIndex("UnitID");

                    b.ToTable("PurchaseOrderGroupLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CanReusedQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("ConsumedForecastQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractualHandoverDateWeekID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSupplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptSubFineline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimateShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FixtureCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForecastWeekID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FreePercent")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("FreePercentQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MSRP")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<bool?>("MatchingShipment")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mfg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderQuantityTracking")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long?>("PurchaseOrderGroupLineID")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseOrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseRequestID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("QuantityPerUnit")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReservedForecastQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("ReservedQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("SalesOrderID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppPlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagSticker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("VendorConfirmDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("WareHouseQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("WastageQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("PurchaseOrderGroupLineID");

                    b.HasIndex("PurchaseOrderID");

                    b.HasIndex("SecondUnitID");

                    b.HasIndex("UnitID");

                    b.ToTable("PurchaseOrderLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderStatus", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("PurchaseOrderStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("PurchaseOrderType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequest", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyExchangeTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DivisionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("ExchangeValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyExchangeTypeID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("StatusID");

                    b.ToTable("PurchaseRequest");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestGroupLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseRequestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("PurchasedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("PriceUnitID");

                    b.HasIndex("PurchaseRequestID");

                    b.HasIndex("UnitID");

                    b.HasIndex("VendorID");

                    b.ToTable("PurchaseRequestGroupLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("PurchaseRequestGroupLineID")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseRequestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("PurchasedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("RemainQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("PriceUnitID");

                    b.HasIndex("PurchaseRequestGroupLineID");

                    b.HasIndex("PurchaseRequestID");

                    b.HasIndex("UnitID");

                    b.HasIndex("VendorID");

                    b.ToTable("PurchaseRequestLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestLog", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseRequestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferenceLogCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("PurchaseRequestID");

                    b.HasIndex("ReferenceLogCode");

                    b.ToTable("PurchaseRequestLog");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestStatus", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PurchaseRequestStatus");

                    b.HasData(
                        new
                        {
                            ID = "N",
                            CanEdit = true,
                            Name = "New request"
                        },
                        new
                        {
                            ID = "S",
                            CanEdit = false,
                            Name = "Submitted"
                        },
                        new
                        {
                            ID = "A",
                            CanEdit = false,
                            Name = "Approved"
                        },
                        new
                        {
                            ID = "R",
                            CanEdit = true,
                            Name = "Rejected"
                        },
                        new
                        {
                            ID = "F",
                            CanEdit = false,
                            Name = "Finished"
                        },
                        new
                        {
                            ID = "C",
                            CanEdit = false,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.QualityAssurance", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemStyleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Percent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityStatusID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("QualityStatusID");

                    b.ToTable("QualityAssurance");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.QualityAudit", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("QualityAssuranceID")
                        .HasColumnType("bigint");

                    b.Property<string>("QualityStatusID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("QualityAudit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.QualityStatus", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("QualityStatus");

                    b.HasData(
                        new
                        {
                            ID = "PA",
                            Name = "Passed",
                            OtherName = "Đạt"
                        },
                        new
                        {
                            ID = "FA",
                            Name = "Failed",
                            OtherName = "Không đạt"
                        },
                        new
                        {
                            ID = "PE",
                            Name = "Pending",
                            OtherName = "Chờ xử lý"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Receipt", b =>
                {
                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountCreditNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountDebitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AcountingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ArrivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntriedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EntriedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FabricPurchaseOrderID")
                        .HasColumnType("bigint");

                    b.Property<string>("FabricPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumberNoTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Offset")
                        .HasColumnType("bit");

                    b.Property<string>("ProductionMethodCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseOrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FabricPurchaseOrderID");

                    b.HasIndex("ProductionMethodCode");

                    b.HasIndex("PurchaseOrderID");

                    b.HasIndex("StorageCode");

                    b.HasIndex("VendorID");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReceiptGroupLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CartonQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DyeLotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FabricPurchaseOrderGroupLineID")
                        .HasColumnType("bigint");

                    b.Property<string>("FabricPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Offset")
                        .HasColumnType("bit");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PurchaseOrderGroupLineID")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PurchaseQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ReceiptNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("ReceiptQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Roll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageBinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("VendorDeliveriedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("FabricPurchaseOrderGroupLineID");

                    b.HasIndex("PurchaseOrderGroupLineID");

                    b.HasIndex("ReceiptNumber");

                    b.HasIndex("UnitID");

                    b.ToTable("ReceiptGroupLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReceiptLine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CartonQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FabricPurchaseOrderID")
                        .HasColumnType("bigint");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NyeLotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PurchaseOrderLineID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long>("ReceiptGroupLineID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Roll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageBinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FabricPurchaseOrderID");

                    b.HasIndex("PurchaseOrderLineID");

                    b.HasIndex("ReceiptGroupLineID");

                    b.ToTable("ReceiptLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReceiptType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReceiptType");

                    b.HasData(
                        new
                        {
                            Id = "RC",
                            Name = "Receipt for purchase",
                            OtherName = "Nhập kho mua hàng"
                        },
                        new
                        {
                            Id = "RP",
                            Name = "Receipt from customer",
                            OtherName = "Nhập kho nhận hàng"
                        },
                        new
                        {
                            Id = "RFG",
                            Name = "Receipt finish good",
                            OtherName = "Nhập kho thành phẩm"
                        },
                        new
                        {
                            Id = "RR",
                            Name = "Receipt for return",
                            OtherName = "Nhập hoàn kho"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReservationEntry", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AvailableQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("IssuedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("JobHeadNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderDetailID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductionBOMID")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchaseOrderLineID")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchaseRequestLineID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ReservedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long?>("StorageDetailID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("JobHeadNumber");

                    b.HasIndex("OrderDetailID");

                    b.HasIndex("ProductionBOMID");

                    b.HasIndex("PurchaseOrderLineID");

                    b.HasIndex("PurchaseRequestLineID");

                    b.HasIndex("StorageDetailID");

                    b.ToTable("ReservationEntry");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReservationForecastEntry", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AvailableQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ForecastMaterialID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PurchaseOrderLineID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ReservedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ForecastMaterialID");

                    b.HasIndex("PurchaseOrderLineID");

                    b.ToTable("ReservationForecastEntry");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesContract", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaveFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("SalesContract");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesContractDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bonding")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Emboss")
                        .HasColumnType("int");

                    b.Property<string>("Factory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FactoryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GmtLeadTime")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Lazer")
                        .HasColumnType("int");

                    b.Property<int?>("LongestMaterialLeadTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MRQDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MfrLeadTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderPlacedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderReadyDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pad")
                        .HasColumnType("int");

                    b.Property<string>("ProductBottom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReqShipMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesContractID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Screen")
                        .HasColumnType("int");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Transfer")
                        .HasColumnType("int");

                    b.Property<int?>("TransitLeadTime")
                        .HasColumnType("int");

                    b.Property<string>("UCustomterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UltimateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Updates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SalesContractID");

                    b.HasIndex("UnitID");

                    b.ToTable("SalesContractDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesOrder", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BrandCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PaymentTermDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PriceTermDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderStatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SalesOrderTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SaveFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BrandCode");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("PaymentTermCode");

                    b.HasIndex("PriceTermCode");

                    b.HasIndex("SalesOrderStatusCode");

                    b.HasIndex("SalesOrderTypeCode");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesOrderOffset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OffsetQuantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesOrderID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetLSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalesOrderOffset");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesOrderStatus", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("SalesOrderStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesOrderType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("SalesOrderType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuote", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CMTPrice")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("CostingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyExchangeTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("DivisionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("ExchangeValue")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("FactoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Labour")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("PrepareBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceTermCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Profit")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("SalesOrderID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SalesQuoteStatusCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeRun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetFOBPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TestingFee")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyExchangeTypeID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("GenderID");

                    b.HasIndex("PriceTermCode");

                    b.HasIndex("SalesOrderID");

                    b.HasIndex("SalesQuoteStatusCode");

                    b.ToTable("SalesQuote");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuoteDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Consumption")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("ExternalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceUnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("QuantityPerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SaleQuoteID")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesQuoteID")
                        .HasColumnType("bigint");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("WastagePercent")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("MaterialTypeCode");

                    b.HasIndex("PriceUnitID");

                    b.HasIndex("SalesQuoteID");

                    b.HasIndex("UnitID");

                    b.HasIndex("VendorID");

                    b.ToTable("SalesQuoteDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuoteLog", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActivyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SaleQuoteID")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesQuoteID")
                        .HasColumnType("bigint");

                    b.Property<string>("SalesQuoteLogReferenceCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("SalesQuoteID");

                    b.HasIndex("SalesQuoteLogReferenceCode");

                    b.ToTable("SalesQuoteLog");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuoteStatus", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("CanEdit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("SalesQuoteStatus");

                    b.HasData(
                        new
                        {
                            Code = "N",
                            CanEdit = true,
                            IsDeleted = false,
                            Name = "Preparing"
                        },
                        new
                        {
                            Code = "S",
                            CanEdit = false,
                            IsDeleted = false,
                            Name = "Submitted"
                        },
                        new
                        {
                            Code = "A",
                            CanEdit = false,
                            IsDeleted = false,
                            Name = "Approved"
                        },
                        new
                        {
                            Code = "R",
                            CanEdit = true,
                            IsDeleted = false,
                            Name = "Rejected"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ScanResult", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Expected")
                        .HasColumnType("int");

                    b.Property<int?>("Found")
                        .HasColumnType("int");

                    b.Property<bool?>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Missing")
                        .HasColumnType("int");

                    b.Property<string>("Oid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperationsCount")
                        .HasColumnType("int");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Unexpected")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("ScanResult");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ScanResultAudit", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AuditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Expected")
                        .HasColumnType("int");

                    b.Property<int?>("Found")
                        .HasColumnType("int");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Missing")
                        .HasColumnType("int");

                    b.Property<long>("ScanResultDetailID")
                        .HasColumnType("bigint");

                    b.Property<string>("TagID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Unexpected")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ScanResultAudit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ScanResultDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Expected")
                        .HasColumnType("int");

                    b.Property<int?>("Found")
                        .HasColumnType("int");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Missing")
                        .HasColumnType("int");

                    b.Property<long>("ScanResultID")
                        .HasColumnType("bigint");

                    b.Property<string>("TagID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Unexpected")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ScanResultID");

                    b.ToTable("ScanResultDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SeparationPackingLine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxDimensionCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FromNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("PackagesPerBox")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("PrePack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("QuantityPerCarton")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("QuantityPerPackage")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("QuantitySize")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<int>("SeparationPackingListID")
                        .HasColumnType("int");

                    b.Property<string>("SequenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToNo")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCarton")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("BoxDimensionCode");

                    b.HasIndex("SeparationPackingListID");

                    b.ToTable("SeparationPackingLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SeparationPackingList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("InvoiceID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShipped")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackingListID")
                        .HasColumnType("int");

                    b.Property<int?>("SeparateOrdinal")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("PackingListID");

                    b.ToTable("SeparationPackingList");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Shipment", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileNameServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShipmentDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AllocQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("AllocReceivedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MRQ")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("MatchedPO")
                        .HasColumnType("bit");

                    b.Property<string>("MaterialClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReceivedQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<long?>("ShipmentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrxDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ShipmentID");

                    b.ToTable("ShipmentDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShipmentSummary", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MRQ")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Received")
                        .HasColumnType("bit");

                    b.Property<long?>("ShipmentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrxDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VendorID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ShipmentID");

                    b.HasIndex("UnitID");

                    b.HasIndex("VendorID");

                    b.ToTable("ShipmentSummary");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingMark", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ShippingMark");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingMethod", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.ToTable("ShippingMethod");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingPlan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ShippingPlans");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingPlanDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CTN")
                        .HasColumnType("int");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Dept")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsError")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCS")
                        .HasColumnType("int");

                    b.Property<int>("PackingListID")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShippingPlanID")
                        .HasColumnType("int");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ShippingPlanID");

                    b.ToTable("ShippingPlanDetails");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingTerm", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ShippingTerm");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Size", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SequeneceNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Status", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            ID = "A",
                            Name = "Approved"
                        },
                        new
                        {
                            ID = "C",
                            Name = "Cutted"
                        },
                        new
                        {
                            ID = "N",
                            Name = "New"
                        },
                        new
                        {
                            ID = "S",
                            Name = "Send"
                        },
                        new
                        {
                            ID = "R",
                            Name = "Reject"
                        });
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StitchingThread", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StitchingThread");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Storage", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("PlantCode");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageBinEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Factory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSucess")
                        .HasColumnType("bit");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StorageBinEntry");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CanReUseQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("CanUseQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("CartonQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultThreadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DyeLotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumberNoTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("IssuedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemMasterID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NotReceivedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Offset")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OnHandQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("OrderQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionMethodCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReseveredQuantity")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<decimal?>("Roll")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageBinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StorageStatusID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFollow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductionMethodCode");

                    b.HasIndex("StorageCode");

                    b.HasIndex("StorageStatusID");

                    b.ToTable("StorageDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageImport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StorageImport");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageImportDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DyeLotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FabricPurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumberNoTotal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Offset")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Roll")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Season")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageBinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StorageImportID")
                        .HasColumnType("int");

                    b.Property<string>("StorageStatusID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFollow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("StorageImportID");

                    b.ToTable("StorageImportDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageStatus", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StorageStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StyleNetWeight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxDimensionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BoxWeight")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("DECIMAL(19,9)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("StyleNetWeight");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SupplierCNUF", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DPPOfice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("CustomerID");

                    b.ToTable("SupplierCNUF");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Tax", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Unit", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Factor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rouding")
                        .HasColumnType("int");

                    b.Property<bool?>("RoundDown")
                        .HasColumnType("bit");

                    b.Property<bool?>("RoundUp")
                        .HasColumnType("bit");

                    b.Property<int?>("RoundingPurchase")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Vendor", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("TaxCode");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ViewCustomerStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemStyleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViewCustomerStyle");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ViewPONumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViewPONumber");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.WastageSetting", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaterialTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("MaxQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RangeQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rounding")
                        .HasColumnType("int");

                    b.Property<decimal?>("WastageStandard")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("MaterialTypeCode");

                    b.ToTable("WastageSetting");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Week", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Week");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.WorkCenter", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Postion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortIndex")
                        .HasColumnType("int");

                    b.Property<string>("WorkCenterTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("PlantCode");

                    b.HasIndex("WorkCenterTypeID");

                    b.ToTable("WorkCenter");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.WorkCenterType", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WorkCenterType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.WorkingTime", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortIndex")
                        .HasColumnType("int");

                    b.Property<string>("ToTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WorkingTime");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.OrderDetailSync", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        //.HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GarmentSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemStyleSyncMasterID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(19, 9)
                        .HasColumnType("decimal(19,9)");

                    b.HasKey("ID");

                    b.HasIndex("ItemStyleSyncMasterID");

                    b.ToTable("OrderDetailSyncs");
                });

            modelBuilder.Entity("ItemStylePackingList", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", null)
                        .WithMany()
                        .HasForeignKey("ItemStylesNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PackingList", null)
                        .WithMany()
                        .HasForeignKey("PackingListsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BoxGroup", "BoxGroup")
                        .WithMany("BoxDetails")
                        .HasForeignKey("BoxGroupOid");

                    b.Navigation("BoxGroup");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxInfo", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxModel", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BoxGroup", "BoxGroup")
                        .WithMany("BoxModels")
                        .HasForeignKey("BoxGroupOid");

                    b.Navigation("BoxGroup");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Brand", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany("Brands")
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Company", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountID");

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Consignee", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Invoice", null)
                        .WithMany("NotifyParties")
                        .HasForeignKey("InvoiceID");

                    b.Navigation("BankAccount");

                    b.Navigation("Country");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.CurrencyExchangeType", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "DestinationCurrency")
                        .WithMany()
                        .HasForeignKey("DestinationCurrencyID");

                    b.Navigation("Currency");

                    b.Navigation("DestinationCurrency");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Customer", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PaymentTerm", "PaymentTerm")
                        .WithMany()
                        .HasForeignKey("PaymentTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", "PriceTerm")
                        .WithMany()
                        .HasForeignKey("PriceTermCode");

                    b.Navigation("BankAccount");

                    b.Navigation("Country");

                    b.Navigation("Currency");

                    b.Navigation("Division");

                    b.Navigation("PaymentTerm");

                    b.Navigation("PriceTerm");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricPurchaseOrder", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", "ProductionMethod")
                        .WithMany()
                        .HasForeignKey("ProductionMethodCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("Customer");

                    b.Navigation("ProductionMethod");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricRequest", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.Navigation("Company");

                    b.Navigation("Customer");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricRequestDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.FabricRequest", "FabricRequest")
                        .WithMany("Details")
                        .HasForeignKey("FabricRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FabricRequest");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ForecastOverall", "ForecastOverall")
                        .WithMany("ForecastDetails")
                        .HasForeignKey("ForecastOverallID");

                    b.Navigation("ForecastOverall");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastEntry", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ForecastGroup", "ForecastGroup")
                        .WithMany("ForecastEntries")
                        .HasForeignKey("ForecastGroupID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Week", "Week")
                        .WithMany()
                        .HasForeignKey("WeekID");

                    b.Navigation("ForecastGroup");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastGroup", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastMaterial", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ForecastDetail", "ForecastDetail")
                        .WithMany("ForecastMaterials")
                        .HasForeignKey("ForecastDetailID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ForecastOverall", "ForecastOverall")
                        .WithMany("ForecastMaterials")
                        .HasForeignKey("ForecastOverallID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PerUnit")
                        .WithMany()
                        .HasForeignKey("PerUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("Currency");

                    b.Navigation("ForecastDetail");

                    b.Navigation("ForecastOverall");

                    b.Navigation("MaterialType");

                    b.Navigation("PerUnit");

                    b.Navigation("PriceUnit");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastOverall", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Week", "CreateWeek")
                        .WithMany()
                        .HasForeignKey("CreateWeekID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ForecastEntry", "ForecastEntry")
                        .WithMany("ForecastOveralls")
                        .HasForeignKey("ForecastEntryID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Week", "ForecastWeek")
                        .WithMany()
                        .HasForeignKey("ForecastWeekID");

                    b.Navigation("CreateWeek");

                    b.Navigation("ForecastEntry");

                    b.Navigation("ForecastWeek");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.GroupMail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InventoryPeriodEntry", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.InventoryPeriod", "InventoryPeriod")
                        .WithMany("Entries")
                        .HasForeignKey("InventoryPeriodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryPeriod");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Invoice", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Consignee", "Consignee")
                        .WithMany()
                        .HasForeignKey("ConsigneeID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Port", "FinalDestination")
                        .WithMany()
                        .HasForeignKey("FinalDestinationID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.IncoTerm", "IncoTerm")
                        .WithMany()
                        .HasForeignKey("IncotermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.InvoiceType", "InvoiceType")
                        .WithMany()
                        .HasForeignKey("InvoiceTypeID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PaymentTerm", "PaymentTerm")
                        .WithMany()
                        .HasForeignKey("PaymentTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Port", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Port", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Consignee", "ShipTo")
                        .WithMany()
                        .HasForeignKey("ShipToID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingMethod", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentCode");

                    b.Navigation("Company");

                    b.Navigation("Consignee");

                    b.Navigation("Customer");

                    b.Navigation("FinalDestination");

                    b.Navigation("IncoTerm");

                    b.Navigation("InvoiceType");

                    b.Navigation("PaymentTerm");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("Shipment");

                    b.Navigation("ShipTo");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InvoiceDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("Invoice");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InvoiceDocument", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.InvoiceDocumentType", "InvoiceDocumentType")
                        .WithMany()
                        .HasForeignKey("InvoiceDocumentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceDocument")
                        .HasForeignKey("InvoiceID");

                    b.Navigation("Invoice");

                    b.Navigation("InvoiceDocumentType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Issued", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageCode");

                    b.Navigation("Customer");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.IssuedGroupLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Issued", "Issued")
                        .WithMany("IssuedGroupLines")
                        .HasForeignKey("IssuedNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.StorageStatus", "StorageStatus")
                        .WithMany()
                        .HasForeignKey("StorageStatusID");

                    b.Navigation("Issued");

                    b.Navigation("StorageStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.IssuedLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.IssuedGroupLine", "IssuedGroupLine")
                        .WithMany("IssuedLines")
                        .HasForeignKey("IssuedGroupLineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Issued", "Issued")
                        .WithMany("IssuedLines")
                        .HasForeignKey("IssuedNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ProductionBOM", "ProductionBOM")
                        .WithMany()
                        .HasForeignKey("ProductionBOMID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.StorageStatus", "StorageStatus")
                        .WithMany()
                        .HasForeignKey("StorageStatusID");

                    b.Navigation("Issued");

                    b.Navigation("IssuedGroupLine");

                    b.Navigation("ProductionBOM");

                    b.Navigation("StorageStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Item", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeCode");

                    b.Navigation("Customer");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemMeta", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemModel", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemPrice", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingTerm", "ShippingTerm")
                        .WithMany()
                        .HasForeignKey("ShippingTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("Currency");

                    b.Navigation("Customer");

                    b.Navigation("PriceUnit");

                    b.Navigation("ShippingTerm");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyleStatus", "ItemStyleStatus")
                        .WithMany()
                        .HasForeignKey("ItemStyleStatusCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", "PriceTerm")
                        .WithMany()
                        .HasForeignKey("PriceTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderStatus", "PurchaseOrderStatus")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderStatusCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderType", "PurchaseOrderType")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderTypeCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesOrder", "SalesOrder")
                        .WithMany("ItemStyles")
                        .HasForeignKey("SalesOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("ItemStyleStatus");

                    b.Navigation("PriceTerm");

                    b.Navigation("PurchaseOrderStatus");

                    b.Navigation("PurchaseOrderType");

                    b.Navigation("SalesOrder");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleBarCode", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", "ItemStyle")
                        .WithMany("Barcodes")
                        .HasForeignKey("ItemStyleNumber");

                    b.Navigation("ItemStyle");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncAction", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncMaster", "ItemStyleSyncMaster")
                        .WithMany("ItemStyleSyncActions")
                        .HasForeignKey("ItemStyleSyncMasterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemStyleSyncMaster");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncMaster", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", "ItemStyle")
                        .WithMany("ItemStyleSyncMasters")
                        .HasForeignKey("ItemStyleNumber");

                    b.Navigation("Customer");

                    b.Navigation("ItemStyle");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobHead", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartRevision", "PartRevision")
                        .WithMany("JobHeads")
                        .HasForeignKey("PartRevisionID");

                    b.Navigation("PartRevision");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobOperation", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.JobHead", "JobHead")
                        .WithMany()
                        .HasForeignKey("JobHeadNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.WorkCenter", "WorkCenter")
                        .WithMany()
                        .HasForeignKey("WorkCenterID");

                    b.Navigation("JobHead");

                    b.Navigation("WorkCenter");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobOutput", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.DailyTarget", null)
                        .WithMany("JobOutput")
                        .HasForeignKey("DailyTargetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.JobHead", "JobHead")
                        .WithMany()
                        .HasForeignKey("JobHeadNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.JobOperation", "JobOperation")
                        .WithMany()
                        .HasForeignKey("JobOperationID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.WorkCenter", "WorkCenter")
                        .WithMany()
                        .HasForeignKey("WorkCenterID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.WorkingTime", "WorkingTime")
                        .WithMany()
                        .HasForeignKey("WorkingTimeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobHead");

                    b.Navigation("JobOperation");

                    b.Navigation("WorkCenter");

                    b.Navigation("WorkingTime");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.LabelPort", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.LoadingPlan", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialRequest", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageCode");

                    b.Navigation("Customer");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialRequestDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialRequest", "MaterialRequest")
                        .WithMany("Details")
                        .HasForeignKey("MaterialRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialRequest");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialSync", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncMaster", "ItemStyleSyncMaster")
                        .WithMany("MaterialSyncs")
                        .HasForeignKey("ItemStyleSyncMasterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemStyleSyncMaster");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialSyncDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialSync", "MaterialSync")
                        .WithMany("Details")
                        .HasForeignKey("MaterialSyncID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialSync");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialTransaction", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.IssuedLine", "IssuedLine")
                        .WithMany()
                        .HasForeignKey("IssuedLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Issued", "Issued")
                        .WithMany()
                        .HasForeignKey("IssuedNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ReceiptGroupLine", "ReceiptGroupLine")
                        .WithMany("Transactions")
                        .HasForeignKey("ReceiptGroupLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Receipt", "Receipt")
                        .WithMany()
                        .HasForeignKey("ReceiptNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.StorageDetail", null)
                        .WithMany("MaterialTransactions")
                        .HasForeignKey("StorageDetailID");

                    b.Navigation("Issued");

                    b.Navigation("IssuedLine");

                    b.Navigation("Receipt");

                    b.Navigation("ReceiptGroupLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.OrderDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", "ItemStyle")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemStyleNumber");

                    b.Navigation("ItemStyle");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BoxDimension", "BoxDimension")
                        .WithMany()
                        .HasForeignKey("BoxDimensionCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BoxDimension", "InnerBoxDimension")
                        .WithMany()
                        .HasForeignKey("InnerBoxDimensionCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PackingList", "PackingList")
                        .WithMany("PackingLines")
                        .HasForeignKey("PackingListID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Pad", "Pad")
                        .WithMany()
                        .HasForeignKey("PadCode");

                    b.Navigation("BoxDimension");

                    b.Navigation("InnerBoxDimension");

                    b.Navigation("PackingList");

                    b.Navigation("Pad");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingList", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Invoice", "Invoice")
                        .WithMany("PackingList")
                        .HasForeignKey("InvoiceID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PackingUnit", "PackingUnit")
                        .WithMany()
                        .HasForeignKey("PackingUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesOrder", "SalesOrder")
                        .WithMany()
                        .HasForeignKey("SalesOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PackingSheetName", "SheetName")
                        .WithMany()
                        .HasForeignKey("SheetNameID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingMark", "ShippingMark1")
                        .WithMany()
                        .HasForeignKey("ShippingMark1Code");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingMark", "ShippingMark2")
                        .WithMany()
                        .HasForeignKey("ShippingMark2Code");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingMethod", "ShippingMethod")
                        .WithMany()
                        .HasForeignKey("ShippingMethodCode");

                    b.Navigation("Company");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");

                    b.Navigation("PackingUnit");

                    b.Navigation("SalesOrder");

                    b.Navigation("SheetName");

                    b.Navigation("ShippingMark1");

                    b.Navigation("ShippingMark2");

                    b.Navigation("ShippingMethod");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingListImageThumbnail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PackingList", "PackingList")
                        .WithMany("PackingListImageThumbnails")
                        .HasForeignKey("PackingListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PackingList");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingOverQuantity", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", "ItemStyle")
                        .WithMany("PackingOverQuantities")
                        .HasForeignKey("ItemStyleNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PackingList", "PackingList")
                        .WithMany("PackingOverQuantities")
                        .HasForeignKey("PackingListID");

                    b.Navigation("ItemStyle");

                    b.Navigation("PackingList");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Part", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartMaterial", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartMaterialStatus", "PartMaterialStatus")
                        .WithMany()
                        .HasForeignKey("PartMaterialStatusCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartRevision", "PartRevision")
                        .WithMany("PartMaterials")
                        .HasForeignKey("PartRevisionID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PerUnit")
                        .WithMany()
                        .HasForeignKey("PerUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("Currency");

                    b.Navigation("MaterialType");

                    b.Navigation("PartMaterialStatus");

                    b.Navigation("PartRevision");

                    b.Navigation("PerUnit");

                    b.Navigation("PriceUnit");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevision", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PullBomType", "PullBomType")
                        .WithMany()
                        .HasForeignKey("PullBomTypeCode");

                    b.Navigation("Customer");

                    b.Navigation("PullBomType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevisionLog", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartRevision", "PartRevision")
                        .WithMany("PartRevisionLogs")
                        .HasForeignKey("PartRevisionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartRevisionLog", "PartRevisionLogReference")
                        .WithMany()
                        .HasForeignKey("PartRevisionLogReferenceCode");

                    b.Navigation("PartRevision");

                    b.Navigation("PartRevisionLogReference");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevisionLogDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartMaterial", "PartMaterial")
                        .WithMany()
                        .HasForeignKey("PartMaterialID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartRevisionLog", "PartRevisionLog")
                        .WithMany("PartRevisionLogDetails")
                        .HasForeignKey("PartRevisionLogCode");

                    b.Navigation("PartMaterial");

                    b.Navigation("PartRevisionLog");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Plant", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Port", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ProductionBOM", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", "ItemStyle")
                        .WithMany("ProductionBOMs")
                        .HasForeignKey("ItemStyleNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.JobHead", "JobHead")
                        .WithMany("ProductionBOMs")
                        .HasForeignKey("JobHeadNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PartMaterial", "PartMaterial")
                        .WithMany()
                        .HasForeignKey("PartMaterialID1");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PerUnit")
                        .WithMany()
                        .HasForeignKey("PerUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("Currency");

                    b.Navigation("ItemStyle");

                    b.Navigation("JobHead");

                    b.Navigation("MaterialType");

                    b.Navigation("PartMaterial");

                    b.Navigation("PerUnit");

                    b.Navigation("PriceUnit");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.CurrencyExchangeType", "CurrencyExchangeType")
                        .WithMany()
                        .HasForeignKey("CurrencyExchangeTypeID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.IncoTerm", "IncoTerm")
                        .WithMany()
                        .HasForeignKey("IncoTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PaymentTerm", "PaymentTerm")
                        .WithMany()
                        .HasForeignKey("PaymentTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderStatus", "PurchaseOrderStatus")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderStatusCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingMethod", "ShippingMethod")
                        .WithMany()
                        .HasForeignKey("ShippingMethodCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingTerm", "ShippingTerm")
                        .WithMany()
                        .HasForeignKey("ShippingTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SupplierCNUF", "SupplierCNUF")
                        .WithMany()
                        .HasForeignKey("SupplierCNUFCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("CurrencyExchangeType");

                    b.Navigation("Customer");

                    b.Navigation("IncoTerm");

                    b.Navigation("PaymentTerm");

                    b.Navigation("PurchaseOrderStatus");

                    b.Navigation("ShippingMethod");

                    b.Navigation("ShippingTerm");

                    b.Navigation("SupplierCNUF");

                    b.Navigation("Tax");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderGroupLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderGroupLines")
                        .HasForeignKey("PurchaseOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderGroupLine", "PurchaseOrderGroupLine")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PurchaseOrderGroupLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderLines")
                        .HasForeignKey("PurchaseOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "SecondUnit")
                        .WithMany()
                        .HasForeignKey("SecondUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("PurchaseOrderGroupLine");

                    b.Navigation("SecondUnit");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequest", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.CurrencyExchangeType", "CurrencyExchangeType")
                        .WithMany()
                        .HasForeignKey("CurrencyExchangeTypeID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.Navigation("Currency");

                    b.Navigation("CurrencyExchangeType");

                    b.Navigation("Customer");

                    b.Navigation("Division");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestGroupLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequest", "PurchaseRequest")
                        .WithMany("PurchaseRequestGroupLines")
                        .HasForeignKey("PurchaseRequestID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("PriceUnit");

                    b.Navigation("PurchaseRequest");

                    b.Navigation("Unit");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestGroupLine", "PurchaseRequestGroupLine")
                        .WithMany("PurchaseRequestLines")
                        .HasForeignKey("PurchaseRequestGroupLineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequest", "PurchaseRequest")
                        .WithMany("PurchaseRequestLines")
                        .HasForeignKey("PurchaseRequestID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("PriceUnit");

                    b.Navigation("PurchaseRequest");

                    b.Navigation("PurchaseRequestGroupLine");

                    b.Navigation("Unit");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestLog", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequest", "PurchaseRequest")
                        .WithMany("Logs")
                        .HasForeignKey("PurchaseRequestID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestLog", "ReferenceLog")
                        .WithMany()
                        .HasForeignKey("ReferenceLogCode");

                    b.Navigation("PurchaseRequest");

                    b.Navigation("ReferenceLog");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.QualityAssurance", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.QualityStatus", "QualityStatus")
                        .WithMany()
                        .HasForeignKey("QualityStatusID");

                    b.Navigation("QualityStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Receipt", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.FabricPurchaseOrder", "FabricPurchaseOrder")
                        .WithMany()
                        .HasForeignKey("FabricPurchaseOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", "ProductionMethod")
                        .WithMany()
                        .HasForeignKey("ProductionMethodCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("Customer");

                    b.Navigation("FabricPurchaseOrder");

                    b.Navigation("ProductionMethod");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Storage");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReceiptGroupLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.FabricPurchaseOrder", "FabricPurchaseOrderGroupLine")
                        .WithMany()
                        .HasForeignKey("FabricPurchaseOrderGroupLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderGroupLine", "PurchaseOrderGroupLine")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderGroupLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Receipt", "Receipt")
                        .WithMany("ReceiptGroupLines")
                        .HasForeignKey("ReceiptNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("FabricPurchaseOrderGroupLine");

                    b.Navigation("PurchaseOrderGroupLine");

                    b.Navigation("Receipt");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReceiptLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.FabricPurchaseOrder", "FabricPurchaseOrder")
                        .WithMany()
                        .HasForeignKey("FabricPurchaseOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderLine", "PurchaseOrderLine")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ReceiptGroupLine", "ReceiptGroupLine")
                        .WithMany("ReceiptLines")
                        .HasForeignKey("ReceiptGroupLineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FabricPurchaseOrder");

                    b.Navigation("PurchaseOrderLine");

                    b.Navigation("ReceiptGroupLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReservationEntry", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.JobHead", "JobHead")
                        .WithMany()
                        .HasForeignKey("JobHeadNumber");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.OrderDetail", "OrderDetail")
                        .WithMany("ReservationEntries")
                        .HasForeignKey("OrderDetailID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ProductionBOM", "ProductionBOM")
                        .WithMany("ReservationEntries")
                        .HasForeignKey("ProductionBOMID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderLine", "PurchaseOrderLine")
                        .WithMany("ReservationEntries")
                        .HasForeignKey("PurchaseOrderLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestLine", "PurchaseRequestLine")
                        .WithMany()
                        .HasForeignKey("PurchaseRequestLineID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.StorageDetail", "StorageDetail")
                        .WithMany("ReservationEntries")
                        .HasForeignKey("StorageDetailID");

                    b.Navigation("JobHead");

                    b.Navigation("OrderDetail");

                    b.Navigation("ProductionBOM");

                    b.Navigation("PurchaseOrderLine");

                    b.Navigation("PurchaseRequestLine");

                    b.Navigation("StorageDetail");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReservationForecastEntry", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ForecastMaterial", "ForecastMaterial")
                        .WithMany("ReservationForecastEntries")
                        .HasForeignKey("ForecastMaterialID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderLine", "PurchaseOrderLine")
                        .WithMany("ReservationForecastEntries")
                        .HasForeignKey("PurchaseOrderLineID");

                    b.Navigation("ForecastMaterial");

                    b.Navigation("PurchaseOrderLine");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesContract", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesContractDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesContract", "SalesContract")
                        .WithMany("ContractDetails")
                        .HasForeignKey("SalesContractID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("SalesContract");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesOrder", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PaymentTerm", "PaymentTerm")
                        .WithMany()
                        .HasForeignKey("PaymentTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", "PriceTerm")
                        .WithMany()
                        .HasForeignKey("PriceTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesOrderStatus", "SalesOrderStatus")
                        .WithMany()
                        .HasForeignKey("SalesOrderStatusCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesOrderType", "SalesOrderType")
                        .WithMany()
                        .HasForeignKey("SalesOrderTypeCode");

                    b.Navigation("Brand");

                    b.Navigation("Currency");

                    b.Navigation("Customer");

                    b.Navigation("Division");

                    b.Navigation("PaymentTerm");

                    b.Navigation("PriceTerm");

                    b.Navigation("SalesOrderStatus");

                    b.Navigation("SalesOrderType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuote", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.CurrencyExchangeType", "CurrencyExchangeType")
                        .WithMany()
                        .HasForeignKey("CurrencyExchangeTypeID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", "PriceTerm")
                        .WithMany()
                        .HasForeignKey("PriceTermCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesOrder", "SalesOrder")
                        .WithMany()
                        .HasForeignKey("SalesOrderID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesQuoteStatus", "SalesQuoteStatus")
                        .WithMany()
                        .HasForeignKey("SalesQuoteStatusCode");

                    b.Navigation("Currency");

                    b.Navigation("CurrencyExchangeType");

                    b.Navigation("Customer");

                    b.Navigation("Division");

                    b.Navigation("Gender");

                    b.Navigation("PriceTerm");

                    b.Navigation("SalesOrder");

                    b.Navigation("SalesQuoteStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuoteDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "PriceUnit")
                        .WithMany()
                        .HasForeignKey("PriceUnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesQuote", "SalesQuote")
                        .WithMany("SalesQuoteDetails")
                        .HasForeignKey("SalesQuoteID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("MaterialType");

                    b.Navigation("PriceUnit");

                    b.Navigation("SalesQuote");

                    b.Navigation("Unit");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuoteLog", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesQuote", "SalesQuote")
                        .WithMany("SalesQuoteLogs")
                        .HasForeignKey("SalesQuoteID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SalesQuoteLog", "SalesQuoteLogReference")
                        .WithMany()
                        .HasForeignKey("SalesQuoteLogReferenceCode");

                    b.Navigation("SalesQuote");

                    b.Navigation("SalesQuoteLogReference");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ScanResult", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ScanResultDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ScanResult", "ScanResult")
                        .WithMany("Details")
                        .HasForeignKey("ScanResultID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScanResult");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SeparationPackingLine", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.BoxDimension", "BoxDimension")
                        .WithMany()
                        .HasForeignKey("BoxDimensionCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.SeparationPackingList", "SeparationPackingList")
                        .WithMany("SeparationPackingLines")
                        .HasForeignKey("SeparationPackingListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoxDimension");

                    b.Navigation("SeparationPackingList");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SeparationPackingList", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PackingList", null)
                        .WithMany("SeparationPackingLists")
                        .HasForeignKey("PackingListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Shipment", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShipmentDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Shipment", "Shipment")
                        .WithMany("Details")
                        .HasForeignKey("ShipmentID");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShipmentSummary", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Shipment", "Shipment")
                        .WithMany("Summaries")
                        .HasForeignKey("ShipmentID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorID");

                    b.Navigation("Shipment");

                    b.Navigation("Unit");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingPlan", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingPlanDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ShippingPlan", "ShippingPlan")
                        .WithMany("Details")
                        .HasForeignKey("ShippingPlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShippingPlan");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Size", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany("Sizes")
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Storage", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Plant", "Plant")
                        .WithMany("Storages")
                        .HasForeignKey("PlantCode");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.PriceTerm", "ProductionMethod")
                        .WithMany()
                        .HasForeignKey("ProductionMethodCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Storage", "Storage")
                        .WithMany("StorageDetails")
                        .HasForeignKey("StorageCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.StorageStatus", "StorageStatus")
                        .WithMany()
                        .HasForeignKey("StorageStatusID");

                    b.Navigation("ProductionMethod");

                    b.Navigation("Storage");

                    b.Navigation("StorageStatus");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageImportDetail", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.StorageImport", null)
                        .WithMany("Details")
                        .HasForeignKey("StorageImportID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StyleNetWeight", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SupplierCNUF", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Vendor", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxCode");

                    b.Navigation("Currency");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.WastageSetting", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.MaterialType", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeCode");

                    b.Navigation("Customer");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.WorkCenter", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantCode");

                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.WorkCenterType", "WorkCenterType")
                        .WithMany()
                        .HasForeignKey("WorkCenterTypeID");

                    b.Navigation("Plant");

                    b.Navigation("WorkCenterType");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.OrderDetailSync", b =>
                {
                    b.HasOne("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncMaster", "ItemStyleSyncMaster")
                        .WithMany("OrderDetailSyncs")
                        .HasForeignKey("ItemStyleSyncMasterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemStyleSyncMaster");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.BoxGroup", b =>
                {
                    b.Navigation("BoxDetails");

                    b.Navigation("BoxModels");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Customer", b =>
                {
                    b.Navigation("Brands");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.DailyTarget", b =>
                {
                    b.Navigation("JobOutput");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.FabricRequest", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastDetail", b =>
                {
                    b.Navigation("ForecastMaterials");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastEntry", b =>
                {
                    b.Navigation("ForecastOveralls");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastGroup", b =>
                {
                    b.Navigation("ForecastEntries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastMaterial", b =>
                {
                    b.Navigation("ReservationForecastEntries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ForecastOverall", b =>
                {
                    b.Navigation("ForecastDetails");

                    b.Navigation("ForecastMaterials");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.InventoryPeriod", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");

                    b.Navigation("InvoiceDocument");

                    b.Navigation("NotifyParties");

                    b.Navigation("PackingList");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Issued", b =>
                {
                    b.Navigation("IssuedGroupLines");

                    b.Navigation("IssuedLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.IssuedGroupLine", b =>
                {
                    b.Navigation("IssuedLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyle", b =>
                {
                    b.Navigation("Barcodes");

                    b.Navigation("ItemStyleSyncMasters");

                    b.Navigation("OrderDetails");

                    b.Navigation("PackingOverQuantities");

                    b.Navigation("ProductionBOMs");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ItemStyleSyncMaster", b =>
                {
                    b.Navigation("ItemStyleSyncActions");

                    b.Navigation("MaterialSyncs");

                    b.Navigation("OrderDetailSyncs");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.JobHead", b =>
                {
                    b.Navigation("ProductionBOMs");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialRequest", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.MaterialSync", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.OrderDetail", b =>
                {
                    b.Navigation("ReservationEntries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PackingList", b =>
                {
                    b.Navigation("PackingLines");

                    b.Navigation("PackingListImageThumbnails");

                    b.Navigation("PackingOverQuantities");

                    b.Navigation("SeparationPackingLists");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevision", b =>
                {
                    b.Navigation("JobHeads");

                    b.Navigation("PartMaterials");

                    b.Navigation("PartRevisionLogs");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PartRevisionLog", b =>
                {
                    b.Navigation("PartRevisionLogDetails");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Plant", b =>
                {
                    b.Navigation("Storages");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ProductionBOM", b =>
                {
                    b.Navigation("ReservationEntries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderGroupLines");

                    b.Navigation("PurchaseOrderLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderGroupLine", b =>
                {
                    b.Navigation("PurchaseOrderLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseOrderLine", b =>
                {
                    b.Navigation("ReservationEntries");

                    b.Navigation("ReservationForecastEntries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequest", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("PurchaseRequestGroupLines");

                    b.Navigation("PurchaseRequestLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.PurchaseRequestGroupLine", b =>
                {
                    b.Navigation("PurchaseRequestLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Receipt", b =>
                {
                    b.Navigation("ReceiptGroupLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ReceiptGroupLine", b =>
                {
                    b.Navigation("ReceiptLines");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesContract", b =>
                {
                    b.Navigation("ContractDetails");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesOrder", b =>
                {
                    b.Navigation("ItemStyles");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SalesQuote", b =>
                {
                    b.Navigation("SalesQuoteDetails");

                    b.Navigation("SalesQuoteLogs");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ScanResult", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.SeparationPackingList", b =>
                {
                    b.Navigation("SeparationPackingLines");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Shipment", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Summaries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.ShippingPlan", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.Storage", b =>
                {
                    b.Navigation("StorageDetails");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageDetail", b =>
                {
                    b.Navigation("MaterialTransactions");

                    b.Navigation("ReservationEntries");
                });

            modelBuilder.Entity("LS_ERP.EntityFrameworkCore.Entities.StorageImport", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
